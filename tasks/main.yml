---
# tasks file for audit
- name: include os-specific variables
  include_vars: "{{ansible_os_family}}.yml"

- include: setup-redhat.yml
  when: ansible_os_family == "RedHat"

- include: setup-debian.yml
  when: ansible_os_family == "Debian"

- name: deploy auditd.conf
  template: >
      src=auditd.conf.j2
      dest=/etc/audit/auditd.conf
      backup=yes
  notify: restart auditd

- name: deploy audit dispatcher configs
  template: src={{item.src}} dest=/etc/audisp/{{item.dest}} backup=yes
  notify:
      - restart auditd
  with_items:
      - { src: audispd.conf.j2,       dest: audispd.conf }
      - { src: audisp-remote.conf.j2, dest: audisp-remote.conf }
      - { src: au-remote.conf.j2,     dest: au-remote.conf }

- name: stat rules.d path
  stat: path=/etc/audit/rules.d
  register: audit_stat

- name: deploy audit.rules
  copy: >
      src=rules.{{ansible_architecture}}.{{audit_rules}}
      dest=/etc/audit/rules.d/audit.rules
      backup=yes
  notify: restart auditd
  when: audit_stat.stat.exists

- name: enable audit.rules
  file: >
      src=/etc/audit/rules.d/audit.rules
      dest=/etc/audit/audit.rules
      state=link
      force=yes
      backup=yes
  notify: restart auditd
  when: ( audit_stat.stat.exists and ansible_os_family == "Debian" )

- name: deploy audit.rules
  copy: >
      src=rules.{{ansible_architecture}}.{{audit_rules}}
      dest=/etc/audit/audit.rules
      backup=yes
  notify: restart auditd
  when: not audit_stat.stat.exists
